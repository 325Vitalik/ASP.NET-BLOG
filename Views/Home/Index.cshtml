@model IEnumerable<Post>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
        var votes = ViewBag.Vote;
}


<h2 class="text-center mt-4">All Posts</h2>
<div>

    @foreach (var post in Model)
    {
        <div class="card m-3">
            <div class="card-admin-panel" onclick="location.href='@Url.Action("Post", "Home", new { id = @post.Id })'">
                <div class="card-header card-header-primary">
                    <div class="d-flex">
                        <div class="mr-auto p-2 text-bold"> @post.Title</div>
                        <div class="p-2 bd-highlight text-secondary text-bold">
                            @if (votes[post.Id] ?? false)
                            {
                                <i class="upvoted upvote fas fa-angle-double-up mx-2" data-id="@post.Id"></i>
                            }
                            else
                            {
                                <i class="upvote fas fa-angle-double-up mx-2" data-id="@post.Id"></i>
                            }

                            <span class="ratingOfPost">@post.Rating</span>

                            @if(!(votes[post.Id] ?? true))
                            {
                                <i class="downvoted downvote fas fa-angle-double-down mx-2" data-id="@post.Id"></i>
                            }
                            else
                            {
                                 <i class="downvote fas fa-angle-double-down mx-2" data-id="@post.Id"></i>
                            }
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    @Html.Raw(post.Body.Substring(0, post.Body.Length > 256 ? 256 : post.Body.Length))
                </div>
            </div>
        </div>
    }
</div>

<script src="~/jquery/jquery.min.js"></script>

<script type="text/javascript">
    $('.upvote').on('click',

        function ratingUp(e) {
            e.stopPropagation();
            var target = e.target;

        $.ajax({
            type: "POST",
            cache: false,
            url: "@Url.Action("RatingUp", "Rating")",
            data: { id: target.dataset.id },
            dataType: 'json',
            success: function (result) {
                var innerRatingElement = target.parentElement.getElementsByClassName("ratingOfPost")[0];
                if (target.classList.contains("upvoted")) {
                    innerRatingElement.innerHTML = +innerRatingElement.innerHTML - 1;

                    target.classList.remove("upvoted");
                } else if (target.parentElement.lastElementChild.classList.contains("downvoted")) {
                    innerRatingElement.innerHTML = +innerRatingElement.innerHTML + 2;

                    target.parentElement.lastElementChild.classList.remove("downvoted");
                    target.classList.add("upvoted");
                } else {
                    innerRatingElement.innerHTML = +innerRatingElement.innerHTML + 1;

                    target.classList.add("upvoted");
                }
            }
        });
        }
    )

    $('.downvote').on('click',

        function ratingUp(e) {
            e.stopPropagation();
            var target = e.target;
            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("RatingDown", "Rating")",
                data: { id: target.dataset.id},
                dataType: 'json',
                success: function (result) {
                    var innerRatingElement = target.parentElement.getElementsByClassName("ratingOfPost")[0];
                    if (target.classList.contains("downvoted")) {
                        innerRatingElement.innerHTML = +innerRatingElement.innerHTML + 1;

                        target.classList.remove("downvoted");
                    } else if (target.parentElement.firstElementChild.classList.contains("upvoted")) {
                        innerRatingElement.innerHTML = +innerRatingElement.innerHTML - 2;

                        target.parentElement.firstElementChild.classList.remove("upvoted")
                        target.classList.add("downvoted");
                    } else {
                        innerRatingElement.innerHTML = +innerRatingElement.innerHTML - 1;

                        target.classList.add("downvoted");
                    }
                }
            });
        }
    )
</script>